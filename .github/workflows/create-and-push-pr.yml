on:
  push:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:

    - name: Check if update branch already exists
      id: check-existing-branch
      uses: actions/github-script@v7
      with:
        script: |
          async function findOpenPR({owner, repo, branchPrefix}) {
            const iterator = github.paginate.iterator(github.rest.pulls.list, {owner, repo, state: 'open'})
            const repoFullName = `${owner}/${repo}`

            for await (const response of iterator) {
              const matchingPR = response.data.find((pr) => (
                pr.head.ref.startsWith(branchPrefix)
                && (pr.head.repo.full_name === repoFullName)
              ))

              if (matchingPR) {
                return matchingPR
              }
            }

            // No existing PRs
            return false
          }

          const branchPrefix = 'do-update-'

          const pr = await findOpenPR({
            owner: context.repo.owner,
            repo: context.repo.repo,
            branchPrefix
          })

          if (pr) {
            core.info(`Found existing PR ${pr.number} for ${pr.head.ref}`)
            core.setOutput('exists', 'true')
            core.setOutput('checkout_branch', pr.head.ref)
            core.setOutput('commit_branch', pr.head.ref)
          } else {
            const timestamp = Math.floor(Date.now() / 1000)
            const newBranch = `do-update-${timestamp}`

            core.info(`No existing PR - starting new branch ${newBranch}`)
            core.setOutput('exists', 'false')
            core.setOutput('checkout_branch', 'do-my-update')
            core.setOutput('commit_branch', newBranch)
          }

    - run: |
        echo "Exists: ${{ steps.check-existing-branch.outputs.exists }}"
        echo "Checkout: ${{ steps.check-existing-branch.outputs.checkout_branch }}"
        echo "Checkout: ${{ steps.check-existing-branch.outputs.commit_branch }}"

    - uses: actions/checkout@v4
      with:
        ref: ${{ steps.check-existing-branch.outputs.checkout_branch }}

    - name: Make a commit msg
      id: msg
      run: |
        {
          echo 'commit_msg<<ENDOFVAR'
          echo 'Do a commit'
          echo ''
          echo 'With multiple lines'
          echo 'ENDOFVAR'
        } >> $GITHUB_OUTPUT

    - name: No changes this time but branch exists
      id: changes
      run: |
        date=`date`
        echo $date >> test.txt
        echo "date=$date" >> $GITHUB_OUTPUT

    - name: Commit & push
      if: false
      env:
        GH_TOKEN: ${{ github.token }}
        BRANCH_NAME: ${{ steps.check-existing-branch.outputs.commit_branch }}
        COMMIT_MSG: ${{ steps.msg.outputs.commit_msg }}
        PR_EXISTS: ${{ steps.check-existing-branch.outputs.exists }}
        PR_TITLE: Do an automated thing ${{steps.changes.outputs.date}}
      run: .github/commit-and-push.sh
